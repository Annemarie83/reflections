When would you want to use a remote repository rather than keeping all your work local?

When I am working together with other people. Or when I work from different computers. Keeping my work in a remote repository enables me to acces the repository from different computers and allows others to contribute.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

Maybe the changes are not competely done yet, and you get a half finished file or something? I'm not sure....

Describe the differences between forks, clones, and branches. When would you use one instead of another?

A fork looks like a clone, but it is not a clone. There is still some sort of connection between the original repository and the fork. A clone is a copy of another repository. A branch, errr... i know what is it, but I can't explain it. Some sort of path, away from the highway, that enables you to experiment with your code ;-)

What is the benefit of having a copy of the last known state of the remote stored locally?

You know what the original was and you can compare the local head and remote head with the original and see what changes have been made.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

Collaboration would probably go by using Google Docs. It would be easier so commit changes, since Google automatically saves files. However, it would be more difficult to retrace what changes have been made and to compare new and old files, or files that have been changed by multiple collaborators.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

To have the opportunity to experiment freely, without the chance that the code will be corrupted or something. Directly in the master is easier and less time-consuming, but using branches is safer. And easier if you collaborate.